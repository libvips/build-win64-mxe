This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Thu, 28 Nov 2019 12:00:00 +0100
Subject: [PATCH 1/3] Use H5make_libsettings.c from native build


diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 1111111..2222222 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -1087,38 +1087,61 @@ else ()
   endif ()
 endif ()
 
-add_executable (H5make_libsettings ${HDF5_SRC_DIR}/H5make_libsettings.c)
-target_include_directories (H5make_libsettings PRIVATE "${HDF5_SRC_DIR};${HDF5_BINARY_DIR};$<$<BOOL:${HDF5_ENABLE_PARALLEL}>:${MPI_C_INCLUDE_DIRS}>")
-target_compile_definitions(H5make_libsettings PUBLIC ${HDF_EXTRA_C_FLAGS} ${HDF_EXTRA_FLAGS})
-TARGET_C_PROPERTIES (H5make_libsettings STATIC)
-target_link_libraries (H5make_libsettings
-    PRIVATE "$<$<BOOL:${HDF5_ENABLE_PARALLEL}>:${MPI_C_LIBRARIES}>" $<$<OR:$<PLATFORM_ID:Windows>,$<PLATFORM_ID:MinGW>>:ws2_32.lib>
-    PRIVATE $<$<PLATFORM_ID:Emscripten>:"-O0">
-)
-
-add_custom_command (
-    OUTPUT ${HDF5_BINARY_DIR}/H5lib_settings.c
-           ${HDF5_BINARY_DIR}/gen_SRCS.stamp2
-    COMMAND ${CMAKE_CROSSCOMPILING_EMULATOR} $<TARGET_FILE:H5make_libsettings>
-    ARGS ${HDF5_BINARY_DIR}/H5lib_settings.c
-    COMMAND    ${CMAKE_COMMAND}
-    ARGS       -E touch ${HDF5_GENERATED_SOURCE_DIR}/gen_SRCS.stamp2
-    DEPENDS H5make_libsettings
-    WORKING_DIRECTORY ${HDF5_BINARY_DIR}
-)
-set_source_files_properties (${HDF5_BINARY_DIR}/H5lib_settings.c PROPERTIES GENERATED TRUE)
-if (BUILD_SHARED_LIBS)
+if (NOT EXISTS "${HDF5_BINARY_DIR}/H5lib_settings.c")
+  add_executable (H5make_libsettings ${HDF5_SRC_DIR}/H5make_libsettings.c)
+  target_include_directories (H5make_libsettings PRIVATE "${HDF5_SRC_DIR};${HDF5_BINARY_DIR};$<$<BOOL:${HDF5_ENABLE_PARALLEL}>:${MPI_C_INCLUDE_DIRS}>")
+  target_compile_definitions(H5make_libsettings PUBLIC ${HDF_EXTRA_C_FLAGS} ${HDF_EXTRA_FLAGS})
+  TARGET_C_PROPERTIES (H5make_libsettings STATIC)
+  target_link_libraries (H5make_libsettings
+      PRIVATE "$<$<BOOL:${HDF5_ENABLE_PARALLEL}>:${MPI_C_LIBRARIES}>" $<$<OR:$<PLATFORM_ID:Windows>,$<PLATFORM_ID:MinGW>>:ws2_32.lib>
+      PRIVATE $<$<PLATFORM_ID:Emscripten>:"-O0">
+  )
+  
   add_custom_command (
-      OUTPUT ${HDF5_BINARY_DIR}/shared/H5lib_settings.c
-             ${HDF5_BINARY_DIR}/shared/shared_gen_SRCS.stamp2
-      COMMAND    ${CMAKE_COMMAND}
-      ARGS       -E copy_if_different "${HDF5_BINARY_DIR}/H5lib_settings.c" "${HDF5_BINARY_DIR}/shared/H5lib_settings.c"
+      OUTPUT ${HDF5_BINARY_DIR}/H5lib_settings.c
+             ${HDF5_BINARY_DIR}/gen_SRCS.stamp2
+      COMMAND ${CMAKE_CROSSCOMPILING_EMULATOR} $<TARGET_FILE:H5make_libsettings>
+      ARGS ${HDF5_BINARY_DIR}/H5lib_settings.c
       COMMAND    ${CMAKE_COMMAND}
-      ARGS       -E touch ${HDF5_GENERATED_SOURCE_DIR}/shared/shared_gen_SRCS.stamp2
-      DEPENDS    ${HDF5_BINARY_DIR}/H5lib_settings.c
+      ARGS       -E touch ${HDF5_BINARY_DIR}/gen_SRCS.stamp2
+      DEPENDS H5make_libsettings
       WORKING_DIRECTORY ${HDF5_BINARY_DIR}
   )
-  set_source_files_properties (${HDF5_BINARY_DIR}/shared/H5lib_settings.c PROPERTIES GENERATED TRUE)
+  set_source_files_properties (${HDF5_BINARY_DIR}/H5lib_settings.c PROPERTIES GENERATED TRUE)
+  if (BUILD_SHARED_LIBS)
+    add_custom_command (
+        OUTPUT ${HDF5_BINARY_DIR}/shared/H5lib_settings.c
+               ${HDF5_BINARY_DIR}/shared/shared_gen_SRCS.stamp2
+        COMMAND    ${CMAKE_COMMAND}
+        ARGS       -E copy_if_different "${HDF5_BINARY_DIR}/H5lib_settings.c" "${HDF5_BINARY_DIR}/shared/H5lib_settings.c"
+        COMMAND    ${CMAKE_COMMAND}
+        ARGS       -E touch ${HDF5_BINARY_DIR}/shared/shared_gen_SRCS.stamp2
+        DEPENDS    ${HDF5_BINARY_DIR}/H5lib_settings.c
+        WORKING_DIRECTORY ${HDF5_BINARY_DIR}
+    )
+    set_source_files_properties (${HDF5_BINARY_DIR}/shared/H5lib_settings.c PROPERTIES GENERATED TRUE)
+  endif ()
+else ()
+  add_custom_command (
+      OUTPUT ${HDF5_BINARY_DIR}/gen_SRCS.stamp2
+      COMMAND    ${CMAKE_COMMAND}
+      ARGS       -E touch ${HDF5_BINARY_DIR}/gen_SRCS.stamp2
+      DEPENDS    ${HDF5_BINARY_DIR}/H5lib_settings.c
+      WORKING_DIRECTORY ${HDF5_BINARY_DIR}
+   )
+  if (BUILD_SHARED_LIBS)
+    add_custom_command (
+        OUTPUT ${HDF5_BINARY_DIR}/shared/H5lib_settings.c
+               ${HDF5_BINARY_DIR}/shared/shared_gen_SRCS.stamp2
+        COMMAND    ${CMAKE_COMMAND}
+        ARGS       -E copy_if_different "${HDF5_BINARY_DIR}/H5lib_settings.c" "${HDF5_BINARY_DIR}/shared/H5lib_settings.c"
+        COMMAND    ${CMAKE_COMMAND}
+        ARGS       -E touch ${HDF5_BINARY_DIR}/shared/shared_gen_SRCS.stamp2
+        DEPENDS    ${HDF5_BINARY_DIR}/H5lib_settings.c
+        WORKING_DIRECTORY ${HDF5_BINARY_DIR}
+    )
+    set_source_files_properties (${HDF5_BINARY_DIR}/shared/H5lib_settings.c PROPERTIES GENERATED TRUE)
+  endif ()
 endif ()
 
 ## all_packages="AC,B,B2,D,F,FA,FL,FS,HL,I,O,S,ST,T,Z"

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tom Schoonjans <Tom.Schoonjans@diamond.ac.uk>
Date: Tue, 27 Feb 2018 15:49:30 +0000
Subject: [PATCH 2/3] Restore MSYS/MINGW support


diff --git a/config/cmake_ext_mod/HDFMacros.cmake b/config/cmake_ext_mod/HDFMacros.cmake
index 1111111..2222222 100644
--- a/config/cmake_ext_mod/HDFMacros.cmake
+++ b/config/cmake_ext_mod/HDFMacros.cmake
@@ -142,15 +142,6 @@ macro (HDF_SET_LIB_OPTIONS libtarget libname libtype)
       )
     endif ()
   endif ()
-
-  #----- Use MSVC Naming conventions for Shared Libraries
-  if (MINGW AND ${libtype} MATCHES "SHARED")
-    set_target_properties (${libtarget} PROPERTIES
-        IMPORT_SUFFIX ".lib"
-        IMPORT_PREFIX ""
-        PREFIX ""
-    )
-  endif ()
 endmacro ()
 
 #-------------------------------------------------------------------------------
@@ -170,7 +161,7 @@ macro (HDF_IMPORT_SET_LIB_OPTIONS libtarget libname libtype libversion)
     if (WIN32)
       if (MINGW)
         set_target_properties (${libtarget} PROPERTIES
-            IMPORTED_IMPLIB "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${IMPORT_LIB_NAME}.lib"
+            IMPORTED_IMPLIB "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${IMPORT_LIB_NAME}${CMAKE_IMPORT_LIBRARY_SUFFIX}"
             IMPORTED_LOCATION "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${IMPORT_LIB_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}"
         )
       else ()
diff --git a/src/H5system.c b/src/H5system.c
index 1111111..2222222 100644
--- a/src/H5system.c
+++ b/src/H5system.c
@@ -838,6 +838,10 @@ Wgettimeofday(struct timeval *tv, struct timezone *tz)
  *
  *-------------------------------------------------------------------------
  */
+#ifdef H5_HAVE_MINGW
+// definition of getenv_s is currently missing in MinGW, appears to be a bug
+_CRTIMP errno_t __cdecl getenv_s(size_t *pReturnValue, char *buffer, size_t numberOfElements, const char *varname);
+#endif
 int
 Wsetenv(const char *name, const char *value, int overwrite)
 {

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Thu, 26 Dec 2019 09:45:00 +0100
Subject: [PATCH 3/3] Remove -static-[libgcc,libstdc++] linker flags

It won't work with llvm-mingw.

diff --git a/c++/examples/CMakeLists.txt b/c++/examples/CMakeLists.txt
index 1111111..2222222 100644
--- a/c++/examples/CMakeLists.txt
+++ b/c++/examples/CMakeLists.txt
@@ -41,11 +41,6 @@ foreach (example ${examples})
   else ()
     TARGET_C_PROPERTIES (cpp_ex_${example} SHARED)
     target_link_libraries (cpp_ex_${example} PRIVATE ${HDF5_CPP_LIBSH_TARGET} ${HDF5_LIBSH_TARGET})
-    if (MINGW)
-      target_link_options (${HDF5_CPP_LIBSH_TARGET}
-          PRIVATE -static-libgcc -static-libstdc++
-      )
-    endif ()
   endif ()
   set_target_properties (cpp_ex_${example} PROPERTIES FOLDER examples/cpp)
 endforeach ()
@@ -59,11 +54,6 @@ foreach (example ${tutr_examples})
   else ()
     TARGET_C_PROPERTIES (cpp_ex_${example} SHARED)
     target_link_libraries (cpp_ex_${example} PRIVATE ${HDF5_CPP_LIBSH_TARGET} ${HDF5_LIBSH_TARGET})
-    if (MINGW)
-      target_link_options (${HDF5_CPP_LIBSH_TARGET}
-          PRIVATE -static-libgcc -static-libstdc++
-      )
-    endif ()
   endif ()
   set_target_properties (cpp_ex_${example} PROPERTIES FOLDER examples/cpp)
 endforeach ()
diff --git a/c++/src/CMakeLists.txt b/c++/src/CMakeLists.txt
index 1111111..2222222 100644
--- a/c++/src/CMakeLists.txt
+++ b/c++/src/CMakeLists.txt
@@ -115,11 +115,6 @@ if (BUILD_SHARED_LIBS)
   target_link_libraries (${HDF5_CPP_LIBSH_TARGET}
       PUBLIC ${HDF5_LIBSH_TARGET}
   )
-  if (MINGW)
-    target_link_options (${HDF5_CPP_LIBSH_TARGET}
-        PRIVATE -static-libgcc -static-libstdc++
-    )
-  endif ()
   set_global_variable (HDF5_LIBRARIES_TO_EXPORT "${HDF5_LIBRARIES_TO_EXPORT};${HDF5_CPP_LIBSH_TARGET}")
   H5_SET_LIB_OPTIONS (${HDF5_CPP_LIBSH_TARGET} ${HDF5_CPP_LIB_NAME} SHARED "CXX")
   set_target_properties (${HDF5_CPP_LIBSH_TARGET} PROPERTIES FOLDER libraries/cpp)
diff --git a/c++/test/CMakeLists.txt b/c++/test/CMakeLists.txt
index 1111111..2222222 100644
--- a/c++/test/CMakeLists.txt
+++ b/c++/test/CMakeLists.txt
@@ -48,10 +48,6 @@ if (NOT BUILD_SHARED_LIBS)
 else ()
   TARGET_C_PROPERTIES (cpp_testhdf5 SHARED)
   target_link_libraries (cpp_testhdf5 PRIVATE ${HDF5_CPP_LIBSH_TARGET} ${HDF5_LIBSH_TARGET} ${HDF5_TEST_LIBSH_TARGET})
-  if (MINGW)
-    target_link_options (${HDF5_CPP_LIBSH_TARGET}
-        PRIVATE -static-libgcc -static-libstdc++
-    )
   endif ()
 endif ()
 set_target_properties (cpp_testhdf5 PROPERTIES FOLDER test/cpp)
