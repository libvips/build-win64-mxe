From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Wed, 5 May 2021 21:00:00 +0200
Subject: [PATCH 1/3] Add `armv7-pc-windows-gnullvm` target

Upstream-Status: Inappropriate [enable feature]
Upstream only accepts Rust targets that are available in stable releases.

diff --git a/vendor/cfg-expr/src/targets/builtins.rs b/vendor/cfg-expr/src/targets/builtins.rs
index 1111111..2222222 100644
--- a/vendor/cfg-expr/src/targets/builtins.rs
+++ b/vendor/cfg-expr/src/targets/builtins.rs
@@ -689,6 +689,19 @@ pub const ALL_BUILTINS: &[TargetInfo] = &[
         has_atomics: HasAtomics::atomic_8_16_32_64_ptr,
         panic: Panic::unwind,
     },
+    TargetInfo {
+        triple: Triple::new_const("armv7-pc-windows-gnullvm"),
+        os: Some(Os::windows),
+        abi: None,
+        arch: Arch::arm,
+        env: Some(Env::gnu),
+        vendor: Some(Vendor::pc),
+        families: Families::windows,
+        pointer_width: 32,
+        endian: Endian::little,
+        has_atomics: HasAtomics::atomic_8_16_32_64_ptr,
+        panic: Panic::unwind,
+    },
     TargetInfo {
         triple: Triple::new_const("armv7-sony-vita-newlibeabihf"),
         os: Some(Os::vita),

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Mon, 21 Sep 2020 11:00:00 +0200
Subject: [PATCH 2/3] Fix linker error on `armv7-pc-windows-gnullvm`

Details:
lld-link: error: undefined symbol: __aeabi_idiv
>>> referenced by libcompiler_builtins-<HASH>.rlib(<O_FILE>):(__aeabi_idivmod)

Upstream-Status: Pending

diff --git a/vendor/compiler_builtins/build.rs b/vendor/compiler_builtins/build.rs
index 1111111..2222222 100644
--- a/vendor/compiler_builtins/build.rs
+++ b/vendor/compiler_builtins/build.rs
@@ -366,7 +366,7 @@ mod c {
             && target_os != "ios"
             && target_os != "watchos"
             && target_os != "tvos"
-            && target_env != "msvc"
+            && target_os != "windows"
         {
             sources.extend(&[
                 ("__aeabi_div0", "arm/aeabi_div0.c"),

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Sat, 17 Feb 2024 10:37:54 +0100
Subject: [PATCH 3/3] Fix build errors on `armv7-pc-windows-gnullvm`

Details:
error[E0412]: cannot find type `WSADATA` in this scope
    --> vendor/windows-sys/src/Windows/Win32/Networking/WinSock/mod.rs:198:104
     |
198  | ::windows_targets::link!("ws2_32.dll" "system" fn WSAStartup(wversionrequested : u16, lpwsadata : *mut WSADATA) -> i32);
     |                                                                                                        ^^^^^^^ help: a struct with a similar name exists: `WSPDATA`
...
6380 | pub struct WSPDATA {
     | ------------------ similarly named struct `WSPDATA` defined here

error[E0412]: cannot find type `SERVENT` in this scope
   --> vendor/windows-sys/src/Windows/Win32/Networking/WinSock/mod.rs:272:144
    |
272 | ...PCSTR, proto : ::windows_sys::core::PCSTR) -> *mut SERVENT);
    |                                                       ^^^^^^^ not found in this scope

error[E0412]: cannot find type `SERVENT` in this scope
   --> vendor/windows-sys/src/Windows/Win32/Networking/WinSock/mod.rs:273:121
    |
273 | ::windows_targets::link!("ws2_32.dll" "system" fn getservbyport(port : i32, proto : ::windows_sys::core::PCSTR) -> *mut SERVENT);
    |                                                                                                                         ^^^^^^^ not found in this scope

Upstream-Status: Pending

diff --git a/vendor/windows-sys/src/Windows/Win32/Networking/WinSock/mod.rs b/vendor/windows-sys/src/Windows/Win32/Networking/WinSock/mod.rs
index 1111111..2222222 100644
--- a/vendor/windows-sys/src/Windows/Win32/Networking/WinSock/mod.rs
+++ b/vendor/windows-sys/src/Windows/Win32/Networking/WinSock/mod.rs
@@ -4762,16 +4762,16 @@ impl ::core::clone::Clone for SERVENT {
     }
 }
 #[repr(C)]
-#[cfg(target_arch = "x86")]
+#[cfg(any(target_arch = "arm", target_arch = "x86"))]
 pub struct SERVENT {
     pub s_name: ::windows_sys::core::PSTR,
     pub s_aliases: *mut *mut i8,
     pub s_port: i16,
     pub s_proto: ::windows_sys::core::PSTR,
 }
-#[cfg(target_arch = "x86")]
+#[cfg(any(target_arch = "arm", target_arch = "x86"))]
 impl ::core::marker::Copy for SERVENT {}
-#[cfg(target_arch = "x86")]
+#[cfg(any(target_arch = "arm", target_arch = "x86"))]
 impl ::core::clone::Clone for SERVENT {
     fn clone(&self) -> Self {
         *self
@@ -5933,7 +5933,7 @@ impl ::core::clone::Clone for WSADATA {
     }
 }
 #[repr(C)]
-#[cfg(target_arch = "x86")]
+#[cfg(any(target_arch = "arm", target_arch = "x86"))]
 pub struct WSADATA {
     pub wVersion: u16,
     pub wHighVersion: u16,
@@ -5943,9 +5943,9 @@ pub struct WSADATA {
     pub iMaxUdpDg: u16,
     pub lpVendorInfo: ::windows_sys::core::PSTR,
 }
-#[cfg(target_arch = "x86")]
+#[cfg(any(target_arch = "arm", target_arch = "x86"))]
 impl ::core::marker::Copy for WSADATA {}
-#[cfg(target_arch = "x86")]
+#[cfg(any(target_arch = "arm", target_arch = "x86"))]
 impl ::core::clone::Clone for WSADATA {
     fn clone(&self) -> Self {
         *self
