From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Manoj Gupta <manojgupta@chromium.org>
Date: Wed, 10 Oct 2018 10:50:23 +0300
Subject: [PATCH 1/2] Pick up clang_rt static archives compiler internal libraries

Libtool checks only for libraries linked as -l* when trying to
find internal compiler libraries. Clang, however uses the absolute
path to link its internal libraries e.g. compiler_rt. This patch
handles clang's statically linked libraries when finding internal
compiler libraries.
https://crbug.com/749263
https://debbugs.gnu.org/cgi/bugreport.cgi?bug=27866

Upstream-Status: Backport [https://git.savannah.gnu.org/cgit/libtool.git/commit/?id=52f78952b9ceb46a8c95a98cd0258fe4b23ce3c1]

diff --git a/aclocal/libtool.m4 b/aclocal/libtool.m4
index 1111111..2222222 100644
--- a/aclocal/libtool.m4
+++ b/aclocal/libtool.m4
@@ -7733,7 +7733,7 @@ if AC_TRY_EVAL(ac_compile); then
   for p in `eval "$output_verbose_link_cmd"`; do
     case $prev$p in
 
-    -L* | -R* | -l*)
+    -L* | -R* | -l* | */libclang_rt.*.a)
        # Some compilers place space between "-{L,R,l}" and the path.
        # Remove the space.
        if test x-L = x"$p" ||

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Martin=20Storsj=C3=B6?= <martin@martin.st>
Date: Mon, 19 Aug 2019 13:34:51 +0300
Subject: [PATCH 2/2] Allow statically linking compiler support libraries when
 linking a library

For cases with deplibs_check_method="file_magic ..." (as it is for mingw),
there were previously no way that a static library could be accepted
here.

Upstream-Status: Backport [https://git.savannah.gnu.org/cgit/libtool.git/commit/?id=d12a1929dbf2550c0ba77da8e976473b24da317b]

diff --git a/libtool/build-aux/ltmain.sh b/libtool/build-aux/ltmain.sh
index 1111111..2222222 100644
--- a/libtool/build-aux/ltmain.sh
+++ b/libtool/build-aux/ltmain.sh
@@ -8224,8 +8224,15 @@ func_mode_link ()
 	  fi
 	  case $linkmode in
 	  lib)
-	    # Linking convenience modules into shared libraries is allowed,
-	    # but linking other static libraries is non-portable.
+	    # Linking convenience modules and compiler provided static libraries
+	    # into shared libraries is allowed, but linking other static
+	    # libraries is non-portable.
+	    case $deplib in
+	      */libgcc*.$libext | */libclang_rt*.$libext)
+		deplibs="$deplib $deplibs"
+		continue
+	      ;;
+	    esac
 	    case " $dlpreconveniencelibs " in
 	    *" $deplib "*) ;;
 	    *)
