This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Tue, 1 Oct 2019 13:00:00 +0200
Subject: [PATCH 1/2] Make libraries private within the pkg-config file

Assuming that IlmBase is built statically, this ensures that the
libraries are not exposed during linking.

diff --git a/IlmBase/IlmBase.pc.in b/IlmBase/IlmBase.pc.in
index 1111111..2222222 100644
--- a/IlmBase/IlmBase.pc.in
+++ b/IlmBase/IlmBase.pc.in
@@ -13,5 +13,5 @@ Description: Base math and exception libraries
 Version: @ILMBASE_VERSION@
 Requires:
 Conflicts:
-Libs: -L${libdir} -lImath${libsuffix} -lHalf${libsuffix} -lIex${libsuffix} -lIexMath${libsuffix} -lIlmThread${libsuffix} @PTHREAD_LIBS@
+Libs.private: -L${libdir} -lImath${libsuffix} -lHalf${libsuffix} -lIex${libsuffix} -lIexMath${libsuffix} -lIlmThread${libsuffix} @PTHREAD_LIBS@
 Cflags: @PTHREAD_CFLAGS@ -I${includedir} -I${includedir}/OpenEXR

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Thu, 7 May 2020 17:50:37 +0200
Subject: [PATCH 3/3] Fix build errors on MinGW-w64


diff --git a/IlmBase/IlmThread/IlmThreadSemaphorePosixCompat.cpp b/IlmBase/IlmThread/IlmThreadSemaphorePosixCompat.cpp
index 1111111..2222222 100644
--- a/IlmBase/IlmThread/IlmThreadSemaphorePosixCompat.cpp
+++ b/IlmBase/IlmThread/IlmThreadSemaphorePosixCompat.cpp
@@ -43,7 +43,7 @@
 #include "IlmThreadSemaphore.h"
 
 #if !defined (HAVE_POSIX_SEMAPHORES) && !defined (__APPLE__)
-#if (!defined (_WIN32) && !defined (_WIN64)) || defined (__MINGW64_VERSION_MAJOR)
+#if (!defined (_WIN32) && !defined (_WIN64)) || defined (HAVE_PTHREAD)
 
 #include "Iex.h"
 #include <assert.h>
@@ -157,7 +157,7 @@ Semaphore::value () const
     ::pthread_mutex_unlock (&_semaphore.mutex);
     return value;
 }
-#else
+#elif !defined(HAVE_PTHREAD)
 Semaphore::Semaphore (unsigned int value)
 {
     _semaphore.count = value;

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Thu, 7 May 2020 20:00:00 +0200
Subject: [PATCH 2/2] Prefer native win32 threading functionality


diff --git a/IlmBase/IlmThread/CMakeLists.txt b/IlmBase/IlmThread/CMakeLists.txt
index 1111111..2222222 100644
--- a/IlmBase/IlmThread/CMakeLists.txt
+++ b/IlmBase/IlmThread/CMakeLists.txt
@@ -27,5 +27,4 @@ ilmbase_define_library(IlmThread
     IlmThreadForward.h
   DEPENDENCIES
     IlmBase::Iex
-    Threads::Threads
   )
diff --git a/IlmBase/config/CMakeLists.txt b/IlmBase/config/CMakeLists.txt
index 1111111..2222222 100644
--- a/IlmBase/config/CMakeLists.txt
+++ b/IlmBase/config/CMakeLists.txt
@@ -19,35 +19,6 @@ if(ILMBASE_HAVE_UCONTEXT_H)
   endif()
 endif()
 
-###check_include_files(pthread.h ILMBASE_HAVE_PTHREAD)
-if(Threads_FOUND)
-  if(CMAKE_HAVE_PTHREAD_H OR CMAKE_USE_PTHREADS_INIT OR CMAKE_HP_PTHREAD_INIT)
-    set(ILMBASE_HAVE_PTHREAD ON)
-    # TODO: remove this once we cleanly have ILMBASE_ prefix on all #defines
-    set(HAVE_PTHREAD ON)
-  endif()
-
-  # we have threads, but do we have posix semaphores for sem_init?
-  # should be in pthreads
-  if(NOT (APPLE OR (WIN32 AND (NOT MINGW))))
-    if(MINGW)
-      check_include_files("pthread_unistd.h;semaphore.h" ILMBASE_HAVE_SEMAPHORE_H)
-    else()
-      check_include_files(semaphore.h ILMBASE_HAVE_SEMAPHORE_H)
-    endif()
-    if(ILMBASE_HAVE_SEMAPHORE_H AND ILMBASE_HAVE_PTHREAD)
-      # should just be in libc, so no need for check_library_exists
-      set(CMAKE_REQUIRED_FLAGS ${CMAKE_THREAD_LIBS_INIT})
-      check_library_exists(pthread sem_init "" ILMBASE_HAVE_POSIX_SEMAPHORES)
-      # TODO: remove this once we cleanly have ILMBASE_ prefix on all #defines
-      if(ILMBASE_HAVE_POSIX_SEMAPHORES)
-        set(HAVE_POSIX_SEMAPHORES ON)
-      endif()
-      set(CMAKE_REQUIRED_FLAGS)
-    endif()
-  endif()
-endif()
-
 if (ILMBASE_ENABLE_LARGE_STACK)
   set(ILMBASE_HAVE_LARGE_STACK ON)
 endif()
@@ -79,14 +50,6 @@ if(ILMBASE_INSTALL_PKG_CONFIG)
     set(libdir "\${exec_prefix}/${CMAKE_INSTALL_LIBDIR}")
     set(includedir "\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}")
     set(LIB_SUFFIX_DASH ${ILMBASE_LIB_SUFFIX})
-    if(TARGET Threads::Threads)
-      # hrm, can't use properties as they end up as generator expressions
-      # which don't seem to evaluate
-      if(THREADS_HAVE_PTHREAD_ARG)
-        set(PTHREAD_CFLAGS "-pthread")
-      endif()
-      set(PTHREAD_LIBS ${CMAKE_THREAD_LIBS_INIT})
-    endif()
     string(REPLACE ".in" "" pcout ${pcinfile})
     configure_file(${pcinfile} ${CMAKE_CURRENT_BINARY_DIR}/${pcout} @ONLY)
     install(
diff --git a/IlmBase/config/IlmBaseSetup.cmake b/IlmBase/config/IlmBaseSetup.cmake
index 1111111..2222222 100644
--- a/IlmBase/config/IlmBaseSetup.cmake
+++ b/IlmBase/config/IlmBaseSetup.cmake
@@ -124,17 +124,3 @@ if(OPENEXR_USE_CLANG_TIDY)
     -checks=*;
   )
 endif()
-
-###############################
-# Dependent libraries
-
-# so we know how to link / use threads and don't have to have a -pthread
-# everywhere...
-if(NOT TARGET Threads::Threads)
-  set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
-  set(THREADS_PREFER_PTHREAD_FLAG TRUE)
-  find_package(Threads)
-  if(NOT Threads_FOUND)
-    message(FATAL_ERROR "Unable to find a threading library which is required for IlmThread")
-  endif()
-endif()
