This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Sun, 24 Nov 2019 13:00:00 +0100
Subject: [PATCH 1/2] MXE targets may include dots

For example: x86_64-w64-mingw32.static

diff --git a/wrappers/native-wrapper.h b/wrappers/native-wrapper.h
index 1111111..2222222 100644
--- a/wrappers/native-wrapper.h
+++ b/wrappers/native-wrapper.h
@@ -145,9 +145,6 @@ static void split_argv(const TCHAR *argv0, const TCHAR **dir_ptr, const TCHAR **
     }
 #endif
     basename = _tcsdup(basename);
-    TCHAR *period = _tcschr(basename, '.');
-    if (period)
-        *period = '\0';
     TCHAR *target = _tcsdup(basename);
     TCHAR *dash = _tcsrchr(target, '-');
     const TCHAR *exe = basename;

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: John Ericson <git@JohnEricson.me>
Date: Wed, 6 Nov 2019 00:06:47 -0500
Subject: [PATCH 2/2] prefix with target all of clang, llvm-rc, llvm-cvtres

Also allows CPP to replace the base name of each.

diff --git a/wrappers/windres-wrapper.c b/wrappers/windres-wrapper.c
index 1111111..2222222 100644
--- a/wrappers/windres-wrapper.c
+++ b/wrappers/windres-wrapper.c
@@ -19,6 +19,18 @@
 
 #include "native-wrapper.h"
 
+#ifndef CC
+#define CC "clang"
+#endif
+
+#ifndef LLVM_RC
+#define LLVM_RC "llvm-rc"
+#endif
+
+#ifndef LLVM_CVTRES
+#define LLVM_CVTRES "llvm-cvtres"
+#endif
+
 #ifndef DEFAULT_TARGET
 #define DEFAULT_TARGET "x86_64-w64-mingw32"
 #endif
@@ -265,7 +277,12 @@ int _tmain(int argc, TCHAR* argv[]) {
     else if (!_tcscmp(arch, _T("aarch64")))
         machine = _T("ARM64");
 
-    const TCHAR *CC = concat(target, _T("-clang"));
+    const TCHAR *resolved_CC =
+        concat(dir, concat(target, _T("-") _T(CC)));
+    const TCHAR *resolved_LLVM_RC =
+        concat(dir, concat(target, _T("-") _T(LLVM_RC)));
+    const TCHAR *resolved_LLVM_CVTRES =
+        concat(dir, concat(target, _T("-") _T(LLVM_CVTRES)));
 
     const TCHAR **rc_options = malloc(2 * argc * sizeof(*cpp_options));
     int nb_rc_options = 0;
@@ -296,7 +313,7 @@ int _tmain(int argc, TCHAR* argv[]) {
     int arg = 0;
 
     if (!_tcsicmp(input_format, _T("rc"))) {
-        exec_argv[arg++] = concat(dir, CC);
+        exec_argv[arg++] = resolved_CC;
         exec_argv[arg++] = _T("-E");
         for (int i = 0; i < nb_cpp_options; i++)
             exec_argv[arg++] = cpp_options[i];
@@ -321,7 +338,7 @@ int _tmain(int argc, TCHAR* argv[]) {
         }
 
         arg = 0;
-        exec_argv[arg++] = concat(dir, _T("llvm-rc"));
+        exec_argv[arg++] = resolved_LLVM_RC;
         for (int i = 0; i < nb_rc_options; i++)
             exec_argv[arg++] = rc_options[i];
         exec_argv[arg++] = _T("-I");
@@ -359,7 +376,7 @@ int _tmain(int argc, TCHAR* argv[]) {
             // All done
         } else if (!_tcsicmp(output_format, _T("coff"))) {
             arg = 0;
-            exec_argv[arg++] = concat(dir, _T("llvm-cvtres"));
+            exec_argv[arg++] = resolved_LLVM_CVTRES;
             exec_argv[arg++] = res;
             exec_argv[arg++] = concat(_T("-machine:"), machine);
             exec_argv[arg++] = concat(_T("-out:"), output);
@@ -382,7 +399,7 @@ int _tmain(int argc, TCHAR* argv[]) {
             error(basename, _T("invalid output format: `"TS"'"), output_format);
         }
     } else if (!_tcsicmp(input_format, _T("res"))) {
-        exec_argv[arg++] = concat(dir, _T("llvm-cvtres"));
+        exec_argv[arg++] = resolved_LLVM_CVTRES;
         exec_argv[arg++] = input;
         exec_argv[arg++] = concat(_T("-machine:"), machine);
         exec_argv[arg++] = concat(_T("-out:"), output);
