This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Thu, 14 Mar 2019 14:00:00 +0200
Subject: [PATCH 1/3] Fix build errors + add install targets


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -66,3 +66,12 @@ endif()
 add_subdirectory (libde265)
 add_subdirectory (dec265)
 add_subdirectory (enc265)
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix "\${prefix}/bin")
+set(libdir "\${prefix}/lib")
+set(includedir "\${prefix}/include")
+set(VERSION ${PACKAGE_VERSION})
+
+configure_file(libde265.pc.in libde265.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/libde265.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
diff --git a/dec265/CMakeLists.txt b/dec265/CMakeLists.txt
index 1111111..2222222 100644
--- a/dec265/CMakeLists.txt
+++ b/dec265/CMakeLists.txt
@@ -18,7 +18,7 @@ endif()
 
 install (TARGETS dec265 DESTINATION ${CMAKE_INSTALL_BINDIR})
 
-if(NOT MSVC)
+if(NOT WIN32)
   # hdrcopy uses internal APIs that are not available when compiled for Windows
   add_executable (hdrcopy hdrcopy.cc)
 
diff --git a/libde265/CMakeLists.txt b/libde265/CMakeLists.txt
index 1111111..2222222 100644
--- a/libde265/CMakeLists.txt
+++ b/libde265/CMakeLists.txt
@@ -108,6 +108,10 @@ if(NOT DISABLE_SSE)
 endif()
 
 add_library(${PROJECT_NAME} ${libde265_sources} ${ENCODER_OBJECTS} ${X86_OBJECTS})
+set_target_properties(${PROJECT_NAME} PROPERTIES
+    PREFIX ""
+    IMPORT_PREFIX ""
+)
 target_link_libraries(${PROJECT_NAME} PRIVATE Threads::Threads)
 
 write_basic_package_version_file(${PROJECT_NAME}ConfigVersion.cmake COMPATIBILITY ExactVersion)
 
From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 20011
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Sun, 16 Feb 2020 19:30:00 +0100
Subject: [PATCH 2/3] Enable PIC code only for shared non-win32 builds


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,7 +8,10 @@ project (libde265
 set(CMAKE_CXX_STANDARD 11)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 set(CMAKE_CXX_EXTENSIONS OFF)
-set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+
+if(NOT WIN32 AND ENABLE_SHARED)
+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+endif()
 
 # The version number.
 set (NUMERIC_VERSION 0x01000800)

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 20011
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Mon, 17 Feb 2020 12:00:00 +0100
Subject: [PATCH 3/3] Add CMake support for NEON optimizations


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -51,6 +51,7 @@ if(CMAKE_COMPILER_IS_GNUCXX OR ${CMAKE_CXX_COMPILER_ID} MATCHES Clang)
 endif()
 
 option(DISABLE_SSE "Disable SSE optimizations" OFF)
+option(DISABLE_NEON "Disable NEON optimizations" OFF)
 
 option(BUILD_SHARED_LIBS "Build shared library" ON)
 if(NOT BUILD_SHARED_LIBS)
diff --git a/libde265/CMakeLists.txt b/libde265/CMakeLists.txt
index 1111111..2222222 100644
--- a/libde265/CMakeLists.txt
+++ b/libde265/CMakeLists.txt
@@ -107,7 +107,25 @@ if(NOT DISABLE_SSE)
   endif()
 endif()
 
-add_library(${PROJECT_NAME} ${libde265_sources} ${ENCODER_OBJECTS} ${X86_OBJECTS})
+if(NOT DISABLE_NEON)
+  # Detect CPU type
+  string(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} CMAKE_SYSTEM_PROCESSOR_LC)
+  if(CMAKE_SYSTEM_PROCESSOR_LC STREQUAL "aarch64" OR
+    CMAKE_SYSTEM_PROCESSOR_LC MATCHES "arm*")
+    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
+      # TODO ARM64 SIMD optimizations
+    else()
+      check_c_compiler_flag(-mfpu=neon SUPPORTS_NEON)
+    endif()
+  endif()
+
+  if(SUPPORTS_NEON)
+    add_definitions(-DHAVE_NEON)
+    add_subdirectory(arm)
+  endif()
+endif()
+
+add_library(${PROJECT_NAME} ${libde265_sources} ${ENCODER_OBJECTS} ${X86_OBJECTS} ${ARM_OBJECTS})
 set_target_properties(${PROJECT_NAME} PROPERTIES
     PREFIX ""
     IMPORT_PREFIX ""
diff --git a/libde265/arm/CMakeLists.txt b/libde265/arm/CMakeLists.txt
new file mode 100644
index 1111111..2222222
--- /dev/null
+++ b/libde265/arm/CMakeLists.txt
@@ -0,0 +1,25 @@
+enable_language(ASM)
+
+option(DISABLE_THUMB "Disable ARM THUMB instructions" OFF)
+  
+set (arm_sources 
+  arm.cc arm.h
+)
+
+add_library(arm OBJECT ${arm_sources})
+
+set (arm_neon_sources 
+  asm.S cpudetect.S hevcdsp_qpel_neon.S neon.S
+)
+
+add_library(arm_neon OBJECT ${arm_neon_sources})
+
+set(BUILD_FLAGS -x assembler-with-cpp -mfpu=neon -DHAVE_NEON -DEXTERN_ASM= -DHAVE_SECTION_DATA_REL_RO)
+
+if(NOT DISABLE_THUMB)
+  set(BUILD_FLAGS ${BUILD_FLAGS} -DCONFIG_THUMB)
+endif()
+
+set_target_properties(arm_neon PROPERTIES COMPILE_OPTIONS "${BUILD_FLAGS}")
+
+set(ARM_OBJECTS $<TARGET_OBJECTS:arm> $<TARGET_OBJECTS:arm_neon> PARENT_SCOPE)
diff --git a/libde265/arm/asm.S b/libde265/arm/asm.S
index 1111111..2222222 100644
--- a/libde265/arm/asm.S
+++ b/libde265/arm/asm.S
@@ -18,7 +18,9 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
+#ifdef HAVE_CONFIG_H
 #include "config.h"
+#endif
 
 #ifdef __ELF__
 #   define ELF
@@ -40,7 +42,7 @@
 #   define FUNC @
 #endif
 
-#if   HAVE_NEON
+#if   HAVE_NEON && !CONFIG_THUMB
         .arch           armv7-a
 #elif HAVE_ARMV6T2
         .arch           armv6t2
@@ -50,7 +52,7 @@
         .arch           armv5te
 #endif
 
-#if   HAVE_NEON
+#if   HAVE_NEON && !CONFIG_THUMB
         .fpu            neon
 #elif HAVE_VFP
         .fpu            vfp
